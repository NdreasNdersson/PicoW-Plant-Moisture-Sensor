# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Build and push docker image
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: ndreasndersson/picow-plant-moisture-sensor:latest

    - name: Build
      # Build your program with the given configuration
      run: docker run -v ${{ github.workspace }}:/project --workdir /project ndreasndersson/picow-plant-moisture-sensor ./build_and_combine.sh

    - name: Static code analysis
      uses: whisperity/codechecker-analysis-action@v1
      id: codechecker
      with:
        logfile: ${{ github.workspace }}/build/compile_commands.json
        config: ${{ github.workspace }}/.codechecker.json

    - name: Deploy
      uses: actions/upload-artifact@v4
      with:
        name: Release
        path: |
          build/*.uf2
          build/*.bin
          build/**/PICO_BOOTLOADER.bin
          ${{ steps.codechecker.outputs.result-html-dir }}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
